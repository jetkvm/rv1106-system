#!/bin/sh

# udhcpc script edited by Tim Riker <Tim@Rikers.org>
# modified by Siyuan <siyuan@buildjet.com>

[ -z "$1" ] && echo "Error: should be called from udhcpc" && exit 1

RESOLV_CONF="/etc/resolv.conf"
LEASE_FILE="/run/udhcpc.$interface.info"

[ -e $RESOLV_CONF ] || touch $RESOLV_CONF
[ -n "$broadcast" ] && BROADCAST="broadcast $broadcast"
[ -n "$subnet" ] && NETMASK="netmask $subnet"
[ -n "$mtu" ] && MTU="mtu $mtu"

case "$1" in
	deconfig)
		/sbin/ifconfig $interface up
		/sbin/ifconfig $interface 0.0.0.0

		# drop info from this interface
		# resolv.conf may be a symlink to /tmp/, so take care
		TMPFILE=$(mktemp)
		grep -vE "# $interface\$" $RESOLV_CONF > $TMPFILE
		cat $TMPFILE > $RESOLV_CONF
		rm -f $TMPFILE

		# delete the lease file if it exists
		[ -f $LEASE_FILE ] && rm -f $LEASE_FILE

		if [ -x /usr/sbin/avahi-autoipd ]; then
			/usr/sbin/avahi-autoipd -k $interface
		fi
		;;

	leasefail|nak)
		if [ -x /usr/sbin/avahi-autoipd ]; then
			/usr/sbin/avahi-autoipd -wD $interface --no-chroot
		fi
		;;

	renew|bound)
		if [ -x /usr/sbin/avahi-autoipd ]; then
			/usr/sbin/avahi-autoipd -k $interface
		fi
		/sbin/ifconfig $interface $ip $BROADCAST $NETMASK $MTU

		if [ -n "$router" ] ; then
			echo "deleting routers"
			while route del default gw 0.0.0.0 dev $interface 2> /dev/null; do
				:
			done

			for i in $router ; do
				route add default gw $i dev $interface
			done
		fi

		# drop info from this interface
		# resolv.conf may be a symlink to /tmp/, so take care
		TMPFILE=$(mktemp)
		grep -vE "# $interface\$" $RESOLV_CONF > $TMPFILE
		cat $TMPFILE > $RESOLV_CONF
		rm -f $TMPFILE

		# prefer rfc3359 domain search list (option 119) if available
		if [ -n "$search" ]; then
			search_list=$search
		elif [ -n "$domain" ]; then
			search_list=$domain
		fi

		[ -n "$search_list" ] &&
			echo "search $search_list # $interface" >> $RESOLV_CONF

		for i in $dns ; do
			echo adding dns $i
			echo "nameserver $i # $interface" >> $RESOLV_CONF
		done

		# write out the lease file
		cat > $LEASE_FILE <<EOF
# generated @ $(date)
# $(uptime)
# the date might be inaccurate if the clock is not set
ip=$ip
siaddr=$siaddr
sname=$sname
boot_file=$boot_file
subnet=$subnet
timezone=$timezone
router=$router
timesvr=$timesvr
namesvr=$namesvr
dns=$dns
logsvr=$logsvr
cookiesvr=$cookiesvr
lprsvr=$lprsvr
hostname=$hostname
bootsize=$bootsize
domain=$domain
swapsvr=$swapsvr
rootpath=$rootpath
ipttl=$ipttl
mtu=$mtu
broadcast=$broadcast
ntpsrv=$ntpsrv
wins=$wins
lease=$lease
dhcptype=$dhcptype
serverid=$serverid
message=$message
tftp=$tftp
bootfile=$bootfile
EOF
		;;
esac

HOOK_DIR="$0.d"
for hook in "${HOOK_DIR}/"*; do
    [ -f "${hook}" -a -x "${hook}" ] || continue
    "${hook}" "${@}"
done

exit 0

